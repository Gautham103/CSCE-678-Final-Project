# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import tweet_analyzer_pb2 as tweet__analyzer__pb2


class Tweet_AnalyzerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Tweet_Sentiment_Request = channel.unary_unary(
        '/Tweet_Analyzer.Tweet_Analyzer/Tweet_Sentiment_Request',
        request_serializer=tweet__analyzer__pb2.Tweet_Analyzer_Request.SerializeToString,
        response_deserializer=tweet__analyzer__pb2.Tweet_Analyzer_Reply.FromString,
        )
    self.Get_Positive_Tweets = channel.unary_stream(
        '/Tweet_Analyzer.Tweet_Analyzer/Get_Positive_Tweets',
        request_serializer=tweet__analyzer__pb2.Dummy.SerializeToString,
        response_deserializer=tweet__analyzer__pb2.Tweets.FromString,
        )
    self.Get_Negative_Tweets = channel.unary_stream(
        '/Tweet_Analyzer.Tweet_Analyzer/Get_Negative_Tweets',
        request_serializer=tweet__analyzer__pb2.Dummy.SerializeToString,
        response_deserializer=tweet__analyzer__pb2.Tweets.FromString,
        )
    self.Get_Neutral_Tweets = channel.unary_stream(
        '/Tweet_Analyzer.Tweet_Analyzer/Get_Neutral_Tweets',
        request_serializer=tweet__analyzer__pb2.Dummy.SerializeToString,
        response_deserializer=tweet__analyzer__pb2.Tweets.FromString,
        )


class Tweet_AnalyzerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Tweet_Sentiment_Request(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_Positive_Tweets(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_Negative_Tweets(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get_Neutral_Tweets(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_Tweet_AnalyzerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Tweet_Sentiment_Request': grpc.unary_unary_rpc_method_handler(
          servicer.Tweet_Sentiment_Request,
          request_deserializer=tweet__analyzer__pb2.Tweet_Analyzer_Request.FromString,
          response_serializer=tweet__analyzer__pb2.Tweet_Analyzer_Reply.SerializeToString,
      ),
      'Get_Positive_Tweets': grpc.unary_stream_rpc_method_handler(
          servicer.Get_Positive_Tweets,
          request_deserializer=tweet__analyzer__pb2.Dummy.FromString,
          response_serializer=tweet__analyzer__pb2.Tweets.SerializeToString,
      ),
      'Get_Negative_Tweets': grpc.unary_stream_rpc_method_handler(
          servicer.Get_Negative_Tweets,
          request_deserializer=tweet__analyzer__pb2.Dummy.FromString,
          response_serializer=tweet__analyzer__pb2.Tweets.SerializeToString,
      ),
      'Get_Neutral_Tweets': grpc.unary_stream_rpc_method_handler(
          servicer.Get_Neutral_Tweets,
          request_deserializer=tweet__analyzer__pb2.Dummy.FromString,
          response_serializer=tweet__analyzer__pb2.Tweets.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Tweet_Analyzer.Tweet_Analyzer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
